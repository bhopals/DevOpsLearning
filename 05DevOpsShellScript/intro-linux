
GUI - Graphical User Interface 
CUI - Command line Interface

In Linux everything is stored as a file


In Windows we have MY Computer and then C:/D: Drives

In Linux the parent directory is ROOT Directory (/) - The top most directory

    ROOT(/)
        /home---: default directory of normal user:
        Ex: dhoni
                /home/dhoni
        /root -- sepecially for root user.
        /ecc -- it container all configuration files
                /etc/passwd
                c:/windows/system32/drivers
        /boot	all bootable are available here
        
        /bin --commands which exe.by all the users
        /sbin--it contains the commands it is exculsively for the root.
        
        /dev   all device files	
                printer, hard disk cd rom
        /proc it conatins all process files
        /mnt   it is a default mount point for your external storage devices
        /usr default softwares are installed in this location
            c:\program files
        

To Switch user 

    sudo su -  

    here sudo - Super User Do 
    su - Switch user 

When you login to linxu if $ is appearing then normal user and if # is appearing then its Super User.

To know about logged in User - whoami


Three types of file type 

    - Files - txt, doc files

        files(text files):
-------------------
        >> how to create file:
	    how to edit
	    how to delete fixed
	
        cat command : concatenate
        
                cat [options] file_ame
                create the file	 cat > filename
                    Once done with the content, press CTRL + C or D to exit the editor.

                append the text  cat >> filename

                display the file(important)  cat filename
        
                cat -n name 
                    - Will open the file with line number.

                "cat" command drawbacks. 
                    - It will always append at the end of the file (cat >> <file-name>).
                    - While entering text in the file, the backspace will not work.


                **To know more about the command, use "man <command-name>"

        touch command	
                - Only to create new files 
                    touch file1 file2 file3  
                        3 files created 

                    touch file{1...100}
                        - it will create file1, file2...file100 with just one commands 

        To remove created files 

            rm <file-name>
            rm -rf <file-name> (Remove file recursively and forcefully. will not ask for Y/N Confirmation)
            rm -rf one.* (Delete all matching file / directories)


    - Directories - Folders
    - Link Files (Soft and Hard Link Files)  - Shortcut Files 



ls - List files (minimal infromation)
ll - List files with permission and other details as well.

press "cd" command to go to the root directory anytime.


To Add new user in Linux Machine

"useradd <user-name>"

To check the added user details : 
    cat /etc/passwd

  It will return all the login details of all the users.


To assign password to newly created user
    passwd <user-name>
    passwd sachin (now it will ask for the password and confirm the password. Thats it)


To switch user in Linux
    su <user-name>

To Delete User 

    userdel <user-name>

    userdel sachin


Directory/File permission:

mkdir test
ll test 



-rw-r--r-- 

 r - Readable
 w - Writable
 x - Executable
 - - Denied

 in "-rw-r--r--" 
    "-" first denotes its directory
    "rw-" denotes permission for person who created it
    "r--" permission for Group
    "r--" (last one) Permission for others (except the user who created )

 RWX = 241 (both way can be used)
 R - 2
 W - 4
 X - 1
  Total is 7 if you want to give full permission

chmod 777 <file-name>
This will give full permission to Created User, Groups, and other users

To give only created user we need to run "chmod 722" (Read only for Group and others)


Other way to update permissions is:

chmod u+x <file-name> (Adding Execute permission to Main user )
chmod g-x <file-name>(Removing execute permission for the Group users)
u - Created User 
g - Group
o - Other 


VI Mode :

vi <file-name>, once file is opened, press "i" for activating INSERT mode.
Enter the details. Once done editing. Press ESC then :wq to quit the editor.




  ===   Session-05   Date: 24-07-2019
        =========================
        1) installation of any package by shellscript

        vi install.sh
        -------------
        #!/bin/bash
        read -p "please enter your required package" soft
        yum install ${soft} -y
        echo  -e "033[0;31m  Successfully \a installaed\033[0m;

        ---------------------------------------------------------------------------------------

        2) Redirectional operaters:

            why we are using redirectional operators:
        output of one command/script we will store as input to the another file.

            ls > abc.txt

        abc.txt if file not exist then it will be create.............	
            
        date  1>output.txt 2>error.txt (The output will be in "output.txt")
        date  1>>output.txt 2>>error.txt (The output will be in "output.txt")

        datee 1>output.txt 2>error.txt  (The output will be in "error.txt") 
        datee 1>>output.txt 2>>error.txt  (The output will be in "error.txt") 


        3) File Discriptors:
        ---------------------
            0 - STDIN
            1 - STDOUT
            2 - STDERR

        4) Command line arguments
        ------------------------------
        #!/bin/bash 
        $a=$1
        $b=$2

        echo `expr $a + $b`

        File name : add.sh 

        To Run "sh add.sh 10 12"
        //Output 
        22

        5) Bash initialization:
        -------------------
        its default location : .bash_profile






===Session-06	Date: 25-07-2019

1) Redirectional Operator 

	any command 1>filename1.txt 2>&1
    Both Error and Success output will be printed in the same directory "filename1.txt" as we have used "&1" as the error file name.
    

2) Bash initialization

		
	a) when a user try to login to the server before getting the termial
the first file executed by the server from the users default locaiton is
.bash_profile----> .bashrc(it is also in the default locaiton of the user)
.bashrc----------> /etc/bashrc
/etc/bashrc---> /etc/profile.d/*.sh


/etc/profile.d/
i will create a my own script and i will check whether exe.or not

	>> include custom scripts
3) Grep command using :
=======================
global regular exp print
4) Conditional statments
		if
		if..else
		if..elif..elif..else ..if
		case
5) looping statement
		for/while/select/until




today putty session commands:
==============================
 1  cd
    2  clera
    3  clear
    4  ls
    5  cat > example
    6  cat example
    7  clear
    8  cat example 1>a.txt 2>b.txt
    9  ls
   10  cat b.txt
   11  cat a.txt
   12  cat example 1>new1 2>&1
   13  cat new1
   14  cat exampe 1>new1 2>&1
   15  cat new1
   16  cat exampe 1>new1 2>>&1
   17  cat exampe 1>new1 2>&1
   18  cat ne1
   19  cat ne1
   20  cat new1
   21  cd
   22  clear
   23  cd /dev
   24  ls
   25  cat null
   26  pwd
   27  cat /dev/null
   28  clear
   29  cat /dev/null
   30  cd
   31  cat example
   32  cat example > /dev/null
   33  cat /dev/null
   34  cat example
   35  cat /dev/null
   36  cd /dev
   37  ll null
   38  clear
   39  cd
   40  clear
   41  ls
   42  vi one.txt
   43  sh one.txt
   44  cat one.txt
   45  date > 1>/dev/null 2>&1
   46  vi one.txt
   47  sh one.txt
   48  echo $?
   49  cat one.txt
   50  cat /dev/null
   51  vi first.sh
   52  cat first.sh
   53  sh first.sh
   54  bash -x first.sh
   55  cat /dev/null
   56  a=`ls -la`
   57  echo $a
   58  echo $a > /dev/null
   59  cat /dev/null
   60  clear
   61  cat $SHELL
   62  CLER
   63  clear
   64  echo $SHELL
   65  exit
   66  cd
   67  pwd
   68  ls
   69  rm -rf a.txt b.txt example first.sh new1 one.txt
   70  ls
   71  ll
   72  ll -al
   73  cat .bash_profile
   74  3.bash_profile is calling another file in the location
   75  clear
   76  ls -al
   77  cat .bash_history
   78  clear
   79  ls -al
   80  cat .bashrc
   81  cat /etc/bashrc
   82  cd /etc/profile.d/
   83  pwd
   84  ll
   85  ll *.sh
   86  cat 256term.sh
   87  clear
   88  ls
   89  vi naga.sh
   90  ll naga.sh
   91  chmod  u+x naga.sh
   92  ll naga.sh
   93  cd
   94  source .bash_profile
   95  cler
   96  clear
   97  clear
   98  clear
   99  alias
  100  alias c=clear
  101  alias
  102  c
  103  c
  104  unalias c
  105  alias x=date
  106  x
  107   #how to make perminat alias
  108  .bash_profile
  109  .bashrc
  110  /etc/bashrc    /etc/profile.d/<location>
  111  clear
  112  vi .bash_profile
  113  x
  114  cat .bash_profile
  115  source .bash_profile
  116  cd
  117  x
  118  x
  119  cat .bash_profile
  120  source .bash_profile
  121  x
  122  cd
  123  clear
  124  .ssh
  125  cd .ssh
  126  ssh-keygen authorized_keys
  127  ssh-keygen
  128  ssh-copy-id -i root@"destionatin server "
  129  clear
  130  cd
  131  history

